on:
  pull_request: # TODO: remove
    branches:
      - main
  schedule:
    # - cron: '0 0 * * *' TODO: restore
    - cron: '*/5 * * * *' # TODO: remove (for testing)

jobs:
  daily:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          # TODO: remove
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Metadata
        id: metadata
        run: |
          path_year="$(date +%Y)"
          path_month="$path_year/$(date +%B)"
          path_full="$path_month/$(date +%d).md"
          title="$(date +%A), $(date +%B) $(date +%d), $(date +%Y)"

          echo path_year=$path_year>> $GITHUB_OUTPUT
          echo path_month=$path_month>> $GITHUB_OUTPUT
          echo path_full=$path_full >> $GITHUB_OUTPUT
          echo title=$title >> $GITHUB_OUTPUT
          
      - name: Create Daily Note File (${{ steps.metadata.outputs.title }})
        env:
          PATH_YEAR: ${{ steps.metadata.outputs.path_year }}
          PATH_MONTH: ${{ steps.metadata.outputs.path_month }}
          PATH_FULL: ${{ steps.metadata.outputs.path_full }}
          TITLE: ${{ steps.metadata.outputs.title }}
        run: |
          YEAR=$(date +%Y)
          README_YEAR=$(cat << EOF
          # $YEAR
          <!-- START doctoc -->
          <!-- END doctoc -->
          EOF
          )

          MONTH=$(date +%B)
          README_MONTH=$(cat << EOF
          # $MONTH
          <!-- START doctoc -->
          <!-- END doctoc -->
          EOF
          )

          EMPTY_NOTE=$(cat << EOF
          # $TITLE
          <!--- TODO: fill me out, if you have time today --->
          EOF
          )

          # Create a README for the current year, if it doesn't exist
          cd $PATH_YEAR
          if [[ ! -f README.md ]]; then
            echo "Creating README for year $YEAR in $PATH_YEAR/README.md"
            echo "$README_YEAR" > README.md
          else 
            echo "README for year already exists: $PATH_YEAR/README.md"
          fi
          cd -

          # Create a README for the current month, if it doesn't exist
          cd $PATH_MONTH
          if [[ ! -f README.md ]]; then
            echo "Creating README for month $MONTH in $PATH_MONTH/README.md"
            echo "$README_MONTH" > README.md
          else 
            echo "README for month already exists: $PATH_MONTH/README.md"
          fi
          cd -

          mkdir -p $(dirname $PATH_FULL)
          if [[ ! -f $PATH_FULL ]]; then
            echo "Creating empty daily note: $PATH_FULL"
            echo "$EMPTY_NOTE" > $PATH_FULL
          else 
            echo "Daily note already exists: $PATH_FULL"
          fi

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Adding daily note for ${{ steps.metadata.outputs.title }}'
          add: '*.md'

      - name: Update TOCs
        uses: technote-space/toc-generator@v4
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}